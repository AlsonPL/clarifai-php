<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/visualization.proto

namespace Clarifai\Grpc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>clarifai.api.SingleVisualizationResponse</code>
 */
class SingleVisualizationResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.clarifai.api.status.Status status = 1;</code>
     */
    private $status = null;
    /**
     * Generated from protobuf field <code>.clarifai.api.VisualizationOutput visualization_output = 2;</code>
     */
    private $visualization_output = null;

    public function __construct() {
        \GPBMetadata\Proto\Clarifai\Api\Visualization::initOnce();
        parent::__construct();
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.status.Status status = 1;</code>
     * @return \Clarifai\Grpc\Status\Status
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.status.Status status = 1;</code>
     * @param \Clarifai\Grpc\Status\Status $var
     * @return $this
     */
    public function setStatus($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Grpc\Status\Status::class);
        $this->status = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.VisualizationOutput visualization_output = 2;</code>
     * @return \Clarifai\Grpc\VisualizationOutput
     */
    public function getVisualizationOutput()
    {
        return $this->visualization_output;
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.VisualizationOutput visualization_output = 2;</code>
     * @param \Clarifai\Grpc\VisualizationOutput $var
     * @return $this
     */
    public function setVisualizationOutput($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Grpc\VisualizationOutput::class);
        $this->visualization_output = $var;

        return $this;
    }

}

